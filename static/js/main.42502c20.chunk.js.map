{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["React","constructor","props","super","this","viewBox","componentDidUpdate","prevProps","String","componentDidMount","calculateBox","box","textEl","current","x","y","width","height","state","render","font","fullTextStyle","textStyle","className","style","ref","TextVice","children","PropTypes","svgStyle","textClassName","svgClassName","onFit","func","App","Component","handleTextChange","target","setState","text","value","fontFamily","type","onChange","ReactDOM","document","getElementById"],"mappings":"2MAGA,MAAM,UAAiBA,IAAvB,UACEC,YAAYC,GACVC,MAAA,GACAC,KAAA,MAAa,CACXC,QAAS,iBAEXD,KAAA,OAAcJ,IAAd,YAGFM,mBAAmBC,GACbC,OAAOD,EAAPC,YAA+BA,OAAOJ,KAAKF,MAA/C,WACEE,KAAA,eAIJK,oBACEL,KAAA,eAGFM,eACE,MAAMC,EAAMP,KAAKQ,OAAOC,QAAxB,UACAT,KAAA,SACE,CACEC,QAAS,GAAF,OAAKM,EAAIG,EAAT,YAAcH,EAAII,EAAlB,YAAuBJ,EAAIK,MAA3B,YAAoCL,EAAIM,SAEjD,KACMb,KAAKF,MAAT,OACEE,KAAA,YAAiBA,KAAKc,MAAtB,WAMRC,SAAS,QAQHf,KAPJ,MAAM,EADC,EACD,WADC,EACD,YADC,EACD,WADC,EACD,gBADC,EACD,aAMJgB,EAPK,EAOLA,KAIIC,EAAgB,eACjBC,GAML,OAJA,IACED,gBAIA,yBACEE,UADF,EAEEC,MAFF,EAGEnB,QAASD,KAAKc,MAAMb,SAEpB,0BACES,EADF,EAEEC,EAFF,EAGES,MAHF,EAIED,UAJF,EAKEE,IAAKrB,KAAKQ,QAXhB,KAoBJc,YAAqB,CACnBC,SAAUC,IADS,KAEnBN,UAAWM,IAFQ,OAGnBC,SAAUD,IAHS,OAInBE,cAAeF,IAJI,OAKnBG,aAAcH,IALK,OAMnBR,KAAMQ,IANa,OAOnBI,MAAOJ,IAAUK,MAGnBP,eAAwB,CACtBC,SADsB,KAEtBL,UAFsB,GAGtBO,SAHsB,GAItBC,cAJsB,KAKtBC,aALsB,KAMtBX,KANsB,KAOtBY,MAAO,M,QCvFT,MAAME,UAAYlC,IAAMmC,UAEtBlC,YAAYC,GACVC,MAAMD,GADW,KAOnBkC,iBAAmB,EAAEC,aACnBjC,KAAKkC,SAAS,CAACC,KAAMF,EAAOG,SAN5BpC,KAAKc,MAAQ,CACXqB,KAAM,gBAQVpB,SAAU,MACDoB,EAAQnC,KAAKc,MAAbqB,KACP,OACE,yBAAKf,MAAO,CAACiB,WAAY,eACvB,yEAEA,kBAAC,EAAD,CACErB,KAAK,0BAEJmB,GAGH,4CACA,2BAAOG,KAAK,OAAOC,SAAUvC,KAAKgC,iBAAkBI,MAAOD,MAMpDL,QC/BfU,IAASzB,OAAO,kBAAC,EAAD,MAAS0B,SAASC,eAAe,U","file":"static/js/main.42502c20.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass TextVice extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viewBox: '0 0 1000 1000'\n    }\n    this.textEl = React.createRef()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (String(prevProps.children) !== String(this.props.children)) {\n      this.calculateBox()\n    }\n  }\n\n  componentDidMount() {\n    this.calculateBox()\n  }\n\n  calculateBox() {\n    const box = this.textEl.current.getBBox()\n    this.setState(\n      {\n        viewBox: `${box.x} ${box.y} ${box.width} ${box.height}`\n      },\n      () => {\n        if (this.props.onFit) {\n          this.props.onFit(this.state.viewBox)\n        }\n      }\n    )\n  }\n\n  render() {\n    const {\n      children,\n      textStyle,\n      svgStyle,\n      textClassName,\n      svgClassName,\n      font\n    } = this.props\n\n    // Merge all text object styles together in one object\n    const fullTextStyle = {\n      ...textStyle\n    }\n    if (font) {\n      fullTextStyle.fontFamily = font\n    }\n\n    return (\n      <svg\n        className={svgClassName}\n        style={svgStyle}\n        viewBox={this.state.viewBox}\n      >\n        <text\n          x={0}\n          y={0}\n          style={fullTextStyle}\n          className={textClassName}\n          ref={this.textEl}\n        >\n          {children}\n        </text>\n      </svg>\n    )\n  }\n}\n\nTextVice.propTypes = {\n  children: PropTypes.node,\n  textStyle: PropTypes.Object,\n  svgStyle: PropTypes.Object,\n  textClassName: PropTypes.Object,\n  svgClassName: PropTypes.Object,\n  font: PropTypes.string,\n  onFit: PropTypes.func\n}\n\nTextVice.defaultProps = {\n  children: null,\n  textStyle: {},\n  svgStyle: {},\n  textClassName: null,\n  svgClassName: null,\n  font: null,\n  onFit: null\n}\n\nexport default TextVice\n","import React from 'react'\n\nimport TextVice from 'react-text-vice'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"Hello there!\"\n    }\n  }\n\n  handleTextChange = ({target}) => {\n    this.setState({text: target.value})\n  }\n\n  render() {\n    const {text} = this.state;\n    return (\n      <div style={{fontFamily: \"sans-serif\"}}>\n        <div>This text will scale too container width</div>\n\n        <TextVice\n          font=\"Times New Roman, serif\"\n        >\n          {text}\n        </TextVice>\n\n        <div>Change Text</div>\n        <input type=\"text\" onChange={this.handleTextChange} value={text}/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}